// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CorruptionsDeviationRegistry__deviationsResult {
  value0: string;
  value1: Address;
  value2: BigInt;

  constructor(value0: string, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class CorruptionsDeviationRegistry__valueForResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get contractAddress(): Address {
    return this[1].toAddress();
  }

  get extraData(): BigInt {
    return this[2].toBigInt();
  }
}

export class CorruptionsDeviationRegistry extends ethereum.SmartContract {
  static bind(address: Address): CorruptionsDeviationRegistry {
    return new CorruptionsDeviationRegistry(
      "CorruptionsDeviationRegistry",
      address
    );
  }

  deviations(param0: BigInt): CorruptionsDeviationRegistry__deviationsResult {
    let result = super.call(
      "deviations",
      "deviations(uint256):(string,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CorruptionsDeviationRegistry__deviationsResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_deviations(
    param0: BigInt
  ): ethereum.CallResult<CorruptionsDeviationRegistry__deviationsResult> {
    let result = super.tryCall(
      "deviations",
      "deviations(uint256):(string,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CorruptionsDeviationRegistry__deviationsResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  valueFor(
    index: BigInt
  ): CorruptionsDeviationRegistry__valueForResultValue0Struct {
    let result = super.call(
      "valueFor",
      "valueFor(uint256):((string,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return changetype<CorruptionsDeviationRegistry__valueForResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_valueFor(
    index: BigInt
  ): ethereum.CallResult<
    CorruptionsDeviationRegistry__valueForResultValue0Struct
  > {
    let result = super.tryCall(
      "valueFor",
      "valueFor(uint256):((string,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<CorruptionsDeviationRegistry__valueForResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetValueCall extends ethereum.Call {
  get inputs(): SetValueCall__Inputs {
    return new SetValueCall__Inputs(this);
  }

  get outputs(): SetValueCall__Outputs {
    return new SetValueCall__Outputs(this);
  }
}

export class SetValueCall__Inputs {
  _call: SetValueCall;

  constructor(call: SetValueCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get contractAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get extraData(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetValueCall__Outputs {
  _call: SetValueCall;

  constructor(call: SetValueCall) {
    this._call = call;
  }
}
